{"version":3,"sources":["keycoder.min.js"],"names":["exportModule","name","moduleObj","module","exports","define","amd","global","window","this","Util","clone","object","JSON","parse","stringify","isUndefined","value","whenUndefined","defaultVal","KeyData","char","shift","ie","ascii","norm","names","moz","KeyConstructor","Key","keyData","character","keyCode","mozilla","charCode","prototype","isPrintableCharacter","hasCharCode","hasDistinctShiftCharacter","equals","other","keyCodeToKeyMap","asciiCodeToKeyMap","characterToKeyMap","key","self","forEach","_getKeyFromMap","code","map","_initializeKeyCodeToKeyMap","_initializeAsciiCodeToKeyMap","_initializeCharacterToKeyMap","toCharacter","fromKeyCode","charCodeToCharacter","fromCharCode","eventToCharacter","event","fromEvent","shiftKey","fromCharacter","type","allKeys","keys","push"],"mappings":"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","file":"keycoder.min.js","sourcesContent":["(function () {\n    {\n        function exportModule(name, moduleObj) {\n            if (typeof module === 'object' && typeof module.exports === 'object') {\n                module.exports = moduleObj;\n            } else if (typeof define === 'function' && define.amd) {\n                define(name, [], function () {\n                    return moduleObj;\n                });\n            } else {\n                var global = typeof window === 'undefined' ? this : window;\n                global[name] = moduleObj;\n            }\n        }\n        var Util = new function () {\n            this.clone = function (object) {\n                return JSON.parse(JSON.stringify(object));\n            };\n            this.isUndefined = function (value) {\n                return typeof value === 'undefined';\n            };\n            this.whenUndefined = function (value, defaultVal) {\n                return this.isUndefined(value) ? defaultVal : value;\n            };\n        }();\n        var KeyData = [\n            {\n                char: '0',\n                shift: ')',\n                ie: 48,\n                ascii: {\n                    norm: 48,\n                    shift: 41\n                }\n            },\n            {\n                char: '1',\n                shift: '!',\n                ie: 49,\n                ascii: {\n                    norm: 49,\n                    shift: 33\n                }\n            },\n            {\n                char: '2',\n                shift: '@',\n                ie: 50,\n                ascii: {\n                    norm: 50,\n                    shift: 64\n                }\n            },\n            {\n                char: '3',\n                shift: '#',\n                ie: 51,\n                ascii: {\n                    norm: 51,\n                    shift: 35\n                }\n            },\n            {\n                char: '4',\n                shift: '$',\n                ie: 52,\n                ascii: {\n                    norm: 52,\n                    shift: 36\n                }\n            },\n            {\n                char: '5',\n                shift: '%',\n                ie: 53,\n                ascii: {\n                    norm: 53,\n                    shift: 37\n                }\n            },\n            {\n                char: '6',\n                shift: '^',\n                ie: 54,\n                ascii: {\n                    norm: 54,\n                    shift: 94\n                }\n            },\n            {\n                char: '7',\n                shift: '&',\n                ie: 55,\n                ascii: {\n                    norm: 55,\n                    shift: 38\n                }\n            },\n            {\n                char: '8',\n                shift: '*',\n                ie: 56,\n                ascii: {\n                    norm: 56,\n                    shift: 42\n                }\n            },\n            {\n                char: '9',\n                shift: '(',\n                ie: 57,\n                ascii: {\n                    norm: 57,\n                    shift: 40\n                }\n            },\n            {\n                char: 'a',\n                shift: 'A',\n                ie: 65,\n                ascii: {\n                    norm: 97,\n                    shift: 65\n                }\n            },\n            {\n                char: 'b',\n                shift: 'B',\n                ie: 66,\n                ascii: {\n                    norm: 98,\n                    shift: 66\n                }\n            },\n            {\n                char: 'c',\n                shift: 'C',\n                ie: 67,\n                ascii: {\n                    norm: 99,\n                    shift: 67\n                }\n            },\n            {\n                char: 'd',\n                shift: 'D',\n                ie: 68,\n                ascii: {\n                    norm: 100,\n                    shift: 68\n                }\n            },\n            {\n                char: 'e',\n                shift: 'E',\n                ie: 69,\n                ascii: {\n                    norm: 101,\n                    shift: 69\n                }\n            },\n            {\n                char: 'f',\n                shift: 'F',\n                ie: 70,\n                ascii: {\n                    norm: 102,\n                    shift: 70\n                }\n            },\n            {\n                char: 'g',\n                shift: 'G',\n                ie: 71,\n                ascii: {\n                    norm: 103,\n                    shift: 71\n                }\n            },\n            {\n                char: 'h',\n                shift: 'H',\n                ie: 72,\n                ascii: {\n                    norm: 104,\n                    shift: 72\n                }\n            },\n            {\n                char: 'i',\n                shift: 'I',\n                ie: 73,\n                ascii: {\n                    norm: 105,\n                    shift: 73\n                }\n            },\n            {\n                char: 'j',\n                shift: 'J',\n                ie: 74,\n                ascii: {\n                    norm: 106,\n                    shift: 74\n                }\n            },\n            {\n                char: 'k',\n                shift: 'K',\n                ie: 75,\n                ascii: {\n                    norm: 107,\n                    shift: 75\n                }\n            },\n            {\n                char: 'l',\n                shift: 'L',\n                ie: 76,\n                ascii: {\n                    norm: 108,\n                    shift: 76\n                }\n            },\n            {\n                char: 'm',\n                shift: 'M',\n                ie: 77,\n                ascii: {\n                    norm: 109,\n                    shift: 77\n                }\n            },\n            {\n                char: 'n',\n                shift: 'N',\n                ie: 78,\n                ascii: {\n                    norm: 110,\n                    shift: 78\n                }\n            },\n            {\n                char: 'o',\n                shift: 'O',\n                ie: 79,\n                ascii: {\n                    norm: 111,\n                    shift: 79\n                }\n            },\n            {\n                char: 'p',\n                shift: 'P',\n                ie: 80,\n                ascii: {\n                    norm: 112,\n                    shift: 80\n                }\n            },\n            {\n                char: 'q',\n                shift: 'Q',\n                ie: 81,\n                ascii: {\n                    norm: 113,\n                    shift: 81\n                }\n            },\n            {\n                char: 'r',\n                shift: 'R',\n                ie: 82,\n                ascii: {\n                    norm: 114,\n                    shift: 82\n                }\n            },\n            {\n                char: 's',\n                shift: 'S',\n                ie: 83,\n                ascii: {\n                    norm: 115,\n                    shift: 83\n                }\n            },\n            {\n                char: 't',\n                shift: 'T',\n                ie: 84,\n                ascii: {\n                    norm: 116,\n                    shift: 84\n                }\n            },\n            {\n                char: 'u',\n                shift: 'U',\n                ie: 85,\n                ascii: {\n                    norm: 117,\n                    shift: 85\n                }\n            },\n            {\n                char: 'v',\n                shift: 'V',\n                ie: 86,\n                ascii: {\n                    norm: 118,\n                    shift: 86\n                }\n            },\n            {\n                char: 'w',\n                shift: 'W',\n                ie: 87,\n                ascii: {\n                    norm: 119,\n                    shift: 87\n                }\n            },\n            {\n                char: 'x',\n                shift: 'X',\n                ie: 88,\n                ascii: {\n                    norm: 120,\n                    shift: 88\n                }\n            },\n            {\n                char: 'y',\n                shift: 'Y',\n                ie: 89,\n                ascii: {\n                    norm: 121,\n                    shift: 89\n                }\n            },\n            {\n                char: 'z',\n                shift: 'Z',\n                ie: 90,\n                ascii: {\n                    norm: 122,\n                    shift: 90\n                }\n            },\n            {\n                char: ' ',\n                names: ['SPACE_BAR'],\n                ie: 32,\n                ascii: { norm: 32 }\n            },\n            {\n                char: ';',\n                shift: ':',\n                ie: 186,\n                moz: 59,\n                ascii: {\n                    norm: 59,\n                    shift: 58\n                }\n            },\n            {\n                char: '=',\n                shift: '+',\n                ie: 187,\n                moz: 61,\n                ascii: {\n                    norm: 61,\n                    shift: 43\n                }\n            },\n            {\n                char: ',',\n                shift: '<',\n                ie: 188,\n                ascii: {\n                    norm: 44,\n                    shift: 60\n                }\n            },\n            {\n                char: '-',\n                shift: '_',\n                ie: 189,\n                moz: 173,\n                ascii: {\n                    norm: 45,\n                    shift: 95\n                }\n            },\n            {\n                char: '.',\n                shift: '>',\n                ie: 190,\n                ascii: {\n                    norm: 46,\n                    shift: 62\n                }\n            },\n            {\n                char: '/',\n                shift: '?',\n                ie: 191,\n                ascii: {\n                    norm: 47,\n                    shift: 63\n                }\n            },\n            {\n                char: '`',\n                shift: '~',\n                ie: 192,\n                ascii: {\n                    norm: 96,\n                    shift: 126\n                }\n            },\n            {\n                char: '[',\n                shift: '{',\n                ie: 219,\n                ascii: {\n                    norm: 91,\n                    shift: 123\n                }\n            },\n            {\n                char: '\\\\',\n                shift: '|',\n                ie: 220,\n                ascii: {\n                    norm: 92,\n                    shift: 124\n                }\n            },\n            {\n                char: ']',\n                shift: '}',\n                ie: 221,\n                ascii: {\n                    norm: 93,\n                    shift: 125\n                }\n            },\n            {\n                char: '\\'',\n                shift: '\"',\n                ie: 222,\n                ascii: {\n                    norm: 39,\n                    shift: 34\n                }\n            },\n            {\n                names: ['F1'],\n                ie: 112\n            },\n            {\n                names: ['F2'],\n                ie: 113\n            },\n            {\n                names: ['F3'],\n                ie: 114\n            },\n            {\n                names: ['F4'],\n                ie: 115\n            },\n            {\n                names: ['F5'],\n                ie: 116\n            },\n            {\n                names: ['F6'],\n                ie: 117\n            },\n            {\n                names: ['F7'],\n                ie: 118\n            },\n            {\n                names: ['F8'],\n                ie: 119\n            },\n            {\n                names: ['F9'],\n                ie: 120\n            },\n            {\n                names: ['F10'],\n                ie: 121\n            },\n            {\n                names: ['F11'],\n                ie: 122\n            },\n            {\n                names: ['F12'],\n                ie: 123\n            },\n            {\n                char: '0',\n                names: ['NUMPAD_0'],\n                ie: 96,\n                ascii: { norm: 48 }\n            },\n            {\n                char: '1',\n                names: ['NUMPAD_1'],\n                ie: 97,\n                ascii: { norm: 49 }\n            },\n            {\n                char: '2',\n                names: ['NUMPAD_2'],\n                ie: 98,\n                ascii: { norm: 50 }\n            },\n            {\n                char: '3',\n                names: ['NUMPAD_3'],\n                ie: 99,\n                ascii: { norm: 51 }\n            },\n            {\n                char: '4',\n                names: ['NUMPAD_4'],\n                ie: 100,\n                ascii: { norm: 52 }\n            },\n            {\n                char: '5',\n                names: ['NUMPAD_5'],\n                ie: 101,\n                ascii: { norm: 53 }\n            },\n            {\n                char: '6',\n                names: ['NUMPAD_6'],\n                ie: 102,\n                ascii: { norm: 54 }\n            },\n            {\n                char: '7',\n                names: ['NUMPAD_7'],\n                ie: 103,\n                ascii: { norm: 55 }\n            },\n            {\n                char: '8',\n                names: ['NUMPAD_8'],\n                ie: 104,\n                ascii: { norm: 56 }\n            },\n            {\n                char: '9',\n                names: ['NUMPAD_9'],\n                ie: 105,\n                ascii: { norm: 57 }\n            },\n            {\n                char: '*',\n                names: ['NUMPAD_MULTIPLY'],\n                ie: 106,\n                ascii: { norm: 42 }\n            },\n            {\n                char: '+',\n                names: ['NUMPAD_PLUS'],\n                ie: 107,\n                ascii: { norm: 43 }\n            },\n            {\n                char: '-',\n                names: ['NUMPAD_MINUS'],\n                ie: 109,\n                ascii: { norm: 45 }\n            },\n            {\n                char: '.',\n                names: ['NUMPAD_DECIMAL'],\n                ie: 110,\n                ascii: { norm: 46 }\n            },\n            {\n                char: '/',\n                names: ['NUMPAD_DIVIDE'],\n                ie: 111,\n                ascii: { norm: 47 }\n            },\n            {\n                names: [\n                    'NUMPAD_MIDDLE',\n                    'MAC_NUM_LOCK'\n                ],\n                ie: 12\n            },\n            {\n                names: ['BACKSPACE'],\n                ie: 8\n            },\n            {\n                names: ['TAB'],\n                ie: 9\n            },\n            {\n                names: ['ENTER'],\n                ie: 13,\n                ascii: { norm: 13 }\n            },\n            {\n                names: ['SHIFT'],\n                ie: 16\n            },\n            {\n                names: ['CONTROL'],\n                ie: 17\n            },\n            {\n                names: ['ALT'],\n                ie: 18\n            },\n            {\n                names: [\n                    'PAUSE',\n                    'BREAK'\n                ],\n                ie: 19\n            },\n            {\n                names: ['CAPS_LOCK'],\n                ie: 20\n            },\n            {\n                names: ['ESCAPE'],\n                ie: 27\n            },\n            {\n                names: [\n                    'WINDOWS',\n                    'COMMAND'\n                ],\n                ie: 91,\n                moz: 224\n            },\n            {\n                names: ['OPTION'],\n                ie: 93,\n                ascii: { norm: 16 }\n            },\n            {\n                names: ['PRINT_SCREEN'],\n                ie: 124,\n                moz: 44\n            },\n            {\n                names: ['NUM_LOCK'],\n                ie: 144\n            },\n            {\n                names: ['SCROLL_LOCK'],\n                ie: 145\n            },\n            {\n                names: ['PAGE_UP'],\n                ie: 33\n            },\n            {\n                names: ['PAGE_DOWN'],\n                ie: 34\n            },\n            {\n                names: ['END'],\n                ie: 35\n            },\n            {\n                names: ['HOME'],\n                ie: 36\n            },\n            {\n                names: ['LEFT_ARROW'],\n                ie: 37\n            },\n            {\n                names: ['UP_ARROW'],\n                ie: 38\n            },\n            {\n                names: ['RIGHT_ARROW'],\n                ie: 39\n            },\n            {\n                names: ['DOWN_ARROW'],\n                ie: 40\n            },\n            {\n                names: ['INSERT'],\n                ie: 45\n            },\n            {\n                names: ['DELETE'],\n                ie: 46\n            }\n        ];\n        var KeyConstructor = function (Util) {\n            /**\n   * A representation of a keyboard key. This class cannot be instantiated manually. All instances are generated by the Keycoder module.\n   * @Class Key\n   * @internal\n   * @property {string[]} names - Names that the key is called. Ex. \"BACKSPACE\", \"INSERT\"\n   * @property {number} keyCode.ie - IE key code\n   * @property {number} keyCode.mozilla - Mozillia key code\n   * @property {string|null} character - Key character\n   * @property {number|null} charCode - ASCII character code\n   * @property {string|null} shift.character Key shift character\n   * @property {number|null} shift.charCode Shift ASCII character code\n   */\n            var Key = function (keyData) {\n                this.shift = {};\n                this.names = Util.clone(Util.whenUndefined(keyData.names, []));\n                this.character = Util.whenUndefined(keyData.char, null);\n                this.shift.character = Util.whenUndefined(keyData.shift, Util.whenUndefined(keyData.char, null));\n                this.keyCode = {\n                    ie: keyData.ie,\n                    mozilla: Util.whenUndefined(keyData.moz, keyData.ie)\n                };\n                this.charCode = null;\n                this.shift.charCode = null;\n                if (!Util.isUndefined(keyData.ascii)) {\n                    this.charCode = Util.whenUndefined(keyData.ascii.norm, null);\n                    this.shift.charCode = Util.whenUndefined(keyData.ascii.shift, Util.whenUndefined(keyData.ascii.norm, null));\n                }\n            };\n            /**\n   * @memberof Key\n   * @returns {boolean} If the key is a printable character\n   */\n            Key.prototype.isPrintableCharacter = function () {\n                return this.character !== null;\n            };\n            /**\n   * @memberof Key\n   * @returns {boolean} If the key has a character code\n   */\n            Key.prototype.hasCharCode = function () {\n                return this.charCode !== null;\n            };\n            /**\n   * @memberof Key\n   * @returns {boolean} If the key's character and shift character are different\n   */\n            Key.prototype.hasDistinctShiftCharacter = function () {\n                return this.character !== this.shift.character;\n            };\n            /**\n   * @memberof Key\n   * @param {Key|number} other - A Key object or key code\n   * @returns {boolean} True if the key and the compared key/code are the same key\n   */\n            Key.prototype.equals = function (other) {\n                if (typeof other === 'object') {\n                    return this.keyCode.ie === other.keyCode.ie;\n                } else {\n                    return this.keyCode.ie === other || this.keyCode.mozilla === other;\n                }\n            };\n            return Key;\n        }(Util);\n        /**\n * @module Keycoder\n */\n        exportModule('Keycoder', new function (Util, Key, keyData) {\n            var keyCodeToKeyMap = null;\n            var asciiCodeToKeyMap = null;\n            var characterToKeyMap = null;\n            /**\n   * An object containing references to all named keys.\n   *\n   * @type {object}\n   * @property {Key} BACKSPACE\n   * @property {Key} TAB\n   * @property {Key} ENTER\n   * @property {Key} SHIFT\n   * @property {Key} CONTROL\n   * @property {Key} ALT\n   * @property {Key} PAUSE\n   * @property {Key} BREAK\n   * @property {Key} CAPS_LOCK\n   * @property {Key} ESCAPE\n   * @property {Key} WINDOWS\n   * @property {Key} COMMAND\n   * @property {Key} OPTION\n   * @property {Key} PRINT_SCREEN\n   * @property {Key} NUM_LOCK\n   * @property {Key} MAC_NUM_LOCK\n   * @property {Key} SCROLL_LOCK\n   * @property {Key} PAGE_UP\n   * @property {Key} PAGE_DOWN\n   * @property {Key} END\n   * @property {Key} HOME\n   * @property {Key} LEFT_ARROW\n   * @property {Key} UP_ARROW\n   * @property {Key} RIGHT_ARROW\n   * @property {Key} DOWN_ARROW\n   * @property {Key} INSERT\n   * @property {Key} DELETE\n   * @property {Key} NUMPAD_0\n   * @property {Key} NUMPAD_1\n   * @property {Key} NUMPAD_2\n   * @property {Key} NUMPAD_3\n   * @property {Key} NUMPAD_4\n   * @property {Key} NUMPAD_5\n   * @property {Key} NUMPAD_6\n   * @property {Key} NUMPAD_7\n   * @property {Key} NUMPAD_8\n   * @property {Key} NUMPAD_9\n   * @property {Key} NUMPAD_MULTIPLY\n   * @property {Key} NUMPAD_PLUS\n   * @property {Key} NUMPAD_MINUS\n   * @property {Key} NUMPAD_DECIMAL\n   * @property {Key} NUMPAD_DIVIDE\n   * @property {Key} NUMPAD_MIDDLE\n   */\n            this.key = {};\n            var self = this;\n            keyData.forEach(function (key) {\n                if (!Util.isUndefined(key.names)) {\n                    key.names.forEach(function (name) {\n                        self.key[name] = new Key(key);\n                    });\n                }\n            });\n            this._getKeyFromMap = function (code, map) {\n                var keyData = map[code];\n                if (Util.isUndefined(keyData)) {\n                    return null;\n                } else {\n                    return new Key(keyData);\n                }\n            };\n            this._initializeKeyCodeToKeyMap = function () {\n                keyCodeToKeyMap = [];\n                keyData.forEach(function (key) {\n                    // No matching IE and Mozilla key codes refer to different physical keys so a single map approach will not result in\n                    // any codes being overwritten in the map\n                    keyCodeToKeyMap[key.ie] = key;\n                    if (!Util.isUndefined(key.moz)) {\n                        keyCodeToKeyMap[key.moz] = key;\n                    }\n                });\n            };\n            this._initializeAsciiCodeToKeyMap = function () {\n                asciiCodeToKeyMap = [];\n                keyData.forEach(function (key) {\n                    if (!Util.isUndefined(key.ascii)) {\n                        if (Util.isUndefined(asciiCodeToKeyMap[key.ascii.norm])) {\n                            asciiCodeToKeyMap[key.ascii.norm] = key;\n                        }\n                        if (!Util.isUndefined(key.ascii.shift)) {\n                            if (Util.isUndefined(asciiCodeToKeyMap[key.ascii.shift])) {\n                                asciiCodeToKeyMap[key.ascii.shift] = key;\n                            }\n                        }\n                    }\n                });\n            };\n            this._initializeCharacterToKeyMap = function () {\n                characterToKeyMap = {};\n                keyData.forEach(function (key) {\n                    // Order matters when inserting to the character map. Sometime two keys have the same character value.\n                    // The more commonly used keys are put higher in the key list so they are looked up rather than less used keys.\n                    if (!Util.isUndefined(key.char) && Util.isUndefined(characterToKeyMap[key.char])) {\n                        characterToKeyMap[key.char] = key;\n                    }\n                    // Shift values should never override regular value in the map. If this was not the case num pad 1 could overwrite\n                    // the number row 1 in the map. Since keys like numpad 1 are less commonly used we don't want to do this.\n                    if (!Util.isUndefined(key.shift) && Util.isUndefined(characterToKeyMap[key.shift])) {\n                        characterToKeyMap[key.shift] = key;\n                    }\n                });\n            };\n            /**\n   * @param {number} keyCode - An IE or Mozilla key code\n   * @param {boolean} shift - The shift key state. A value of true indicates it is pressed, false that it is not\n   * @returns {string|null} The character for the keycode and shift state. Null if the key is not a printable character.\n   */\n            this.toCharacter = function (keyCode, shift) {\n                var key = this.fromKeyCode(keyCode);\n                if (key === null) {\n                    return null;\n                }\n                return shift ? key.shift.character : key.character;\n            };\n            /**\n   * @param {number} charCode - An ASCII character code\n   * @returns {string|null} Returns the character for the character code. Null if the key is not a printable character.\n   */\n            this.charCodeToCharacter = function (charCode) {\n                var key = this.fromCharCode(charCode);\n                if (key === null) {\n                    return null;\n                }\n                return key.charCode === charCode ? key.character : key.shift.character;\n            };\n            /**\n   * @param {number} event - A keydown, keyup, or keypress event object\n   * @returns {string|null} - The character pressed in the key event. Null if the key pressed is not a printable character, or the event is not a key event.\n   */\n            this.eventToCharacter = function (event) {\n                var key = this.fromEvent(event);\n                if (key === null) {\n                    return null;\n                }\n                return event.shiftKey ? key.shift.character : key.character;\n            };\n            /**\n   * @param {string} character\n   * @returns {Key|null} A Key object. Null if no key is associated with the provided code.\n   */\n            this.fromCharacter = function (character) {\n                if (characterToKeyMap === null) {\n                    this._initializeCharacterToKeyMap();\n                }\n                return this._getKeyFromMap(character, characterToKeyMap);\n            };\n            /**\n   * @param {number} keyCode - A IE or Mozilla key code\n   * @returns {Key|null} A Key object. Null if no key is associated with the provided code.\n   */\n            this.fromKeyCode = function (keyCode) {\n                if (keyCodeToKeyMap === null) {\n                    this._initializeKeyCodeToKeyMap();\n                }\n                return this._getKeyFromMap(keyCode, keyCodeToKeyMap);\n            };\n            /**\n   * Maps an ASCII character code to a Key object\n   * @param {number} charCode - An ASCII character code\n   * @returns {Key|null} A Key object. Null if no key is associated with the provided code.\n   */\n            this.fromCharCode = function (charCode) {\n                if (asciiCodeToKeyMap === null) {\n                    this._initializeAsciiCodeToKeyMap();\n                }\n                return this._getKeyFromMap(charCode, asciiCodeToKeyMap);\n            };\n            /**\n   * Maps a keypress, keydown, or keyup event object to a key\n   * @param {object} event - A keydown, keyup, or keypress event object\n   * @returns {Key|null} A Key object. Null if no key was pressed in the provided event.\n   */\n            this.fromEvent = function (event) {\n                var key = null;\n                if (event.type === 'keydown' || event.type === 'keyup') {\n                    key = this.fromKeyCode(event.keyCode);\n                } else if (event.type === 'keypress') {\n                    key = this.fromCharCode(event.charCode);\n                }\n                return key;\n            };\n            /**\n   * @returns {Key[]} An array of Key objects for all keys\n   */\n            this.allKeys = function () {\n                var keys = [];\n                keyData.forEach(function (key) {\n                    keys.push(new Key(key));\n                });\n                return keys;\n            };\n        }(Util, KeyConstructor, KeyData));\n    }\n}());"],"sourceRoot":"/source/"}